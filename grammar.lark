
?start: program

?program: (declaration | macro)* expression

declaration: identifier "::" expression "::"

data: "data" NAME "::" expression

module: "module" NAME "::" "(" declaration* ")"

macro: "{" NAME splice "}" "::" expression "::"

infix: expression "`" term "`" expression

match: "match" "{" match_case* final_case "}"

match_case: atom "->" expression

final_case: "|>" expression

?splice: id_splice
       | head_splice
       | tail_splice

id_splice: "~" NAME
head_splice: "~." NAME
tail_splice: "~:" NAME

expression: term+

if: "then" term

ifelse: "then" term "else" atom

while: "while" term "loop" atom

combinator: "{" (term | splice) (expression | splice)? "}"


array: "[" (term | NUMBER)+ "]" | "[" "]"

set_symbol: ":=" NAME

symbol: ":" NAME

?term: match
     | infix
     | combinator
     | atom

?atom: NAME
     | STRING
     | OPERATOR
     | CHARACTER
     | NUMBER
     | array
     | set_symbol
     | symbol
     | "(" expression ")"

?identifier: NAME | OPERATOR

OPERATOR: /[+\-*\/!@#$%&;,?\=\|<>_.^][+\-*\/!@#$%;,?\=\|<>_.^:]*|[+\-*\/!@#$%^&:;,?~=<>](?![A-Z])[+\-*\/!@#$%^&;,?=~<>]/

NAME: /[A-Z][a-zA-Z0-9\/]*/

CHARACTER: /'[^']'/
 
STRING: /"[^"]*"/

NUMBER: /-?\d+(\.\d+)?/

%ignore /\s+/
